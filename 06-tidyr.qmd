---
title: "Section 6: Tidying with `tidyr`"
author: "Matt Higham"
format: 
  html:
    embed-resources: true
---

## Class Exercises 

Class Exercise 2.

```{r}
library(tidyverse)
library(here)
prices_df <- read_csv(here("data/UBSprices2.csv"))
prices_df

prices_long <- prices_df |>
  pivot_longer(2:7, names_to = "temp",
               values_to = "price") |>
  separate(temp, c("commodity", "year"), sep = -4)
prices_long
## class exercise 3

prices_wide <- prices_long |> pivot_wider(names_from = "commodity",
                           values_from = "price")
prices_wide

## class exercise 4
ggplot(data = prices_long |> filter(commodity == "rice"),
       aes(x = year, y = price, group = city)) +
  geom_line()

ggplot(data = prices_wide, aes(x = year, y = rice)) +
  geom_line(aes(group = city))

## slightly easier to use the wider format here,
## as we avoid an extra filter().

prices_amsterdam <- prices_long |>
  filter(city == "Amsterdam")

ggplot(prices_amsterdam, aes(x = year, y = price)) +
  geom_line(aes(colour = commodity, group = commodity))

prices_wide
## to make the plot with this data set, you would need
## three different geom_lines: one with bicmac as the
## y aesthetic, one with bread as the y aestehetic, and
## one with rice as the y aesthetic.
```

Class Exercises 5 through 7.

```{r}
mortality_df <- read_csv(here("data/under5mortality.csv"))
head(mortality_df)

mortality_long <- mortality_df |>
  pivot_longer(2:217, names_to = "year",
               values_to = "mortality",
               names_transform = list(year = as.numeric)) |>
  rename(country = `Under five mortality`)

ggplot(mortality_long, aes(x = year, y = mortality)) +
  geom_line(aes(group = country), alpha = 0.1)
```

Class Exercise 7. The graph looks weird because many countries have a flat mortality rate from 1800 to 1900. Perhaps the data just has an "average" mortality rate for each of these countries in the 19th century.

## Your Turn

Your Turns 1 through 5.

```{r}
library(tidyverse)
library(here)
baseball_df <- read_csv(here("data/mlb2016.csv"))
head(baseball_df)
```

Your Turn 1. The salary variables have dollar signs (units) when they should not (4. in tidy data definition).
The Years column actually contains three variables: duration, start year, and end year (1. in tidy data definition).

Your Turns 2 and 3.

```{r}
baseball_tidy <- baseball_df |>
  separate(Years, into = c("duration", "temp"),
           sep = " ") |>
  separate(temp, into = c("start", "end"),
           sep = "-") |>
  mutate(Salary = parse_number(Salary),
         start = parse_number(start),
         end = parse_number(end),
         Total.Value = parse_number(Total.Value),
         Avg.Annual = parse_number(Avg.Annual))

## we get a warning because for some players, they
## are in a one year contract. So, there is no "-"
## to separate by for those players


ggplot(data = baseball_tidy, aes(x = POS, y = Salary)) +
  geom_boxplot()

ggplot(data = baseball_tidy, aes(x = Salary)) +
  geom_histogram(colour = "black", fill = "white", bins = 20) +
  facet_wrap(~POS)

library(scales)
ggplot(data = baseball_tidy, aes(x = POS, y = Salary)) +
  geom_violin() +
  scale_y_continuous(labels = label_comma())

ggplot(data = baseball_tidy, aes(x = POS, y = Salary)) +
  geom_jitter(width = 0.10) +
  theme_minimal()
```

Your Turn 6

```{r}
nfl_df <- read_csv(here::here("data/nfl_salary.csv"))
nfl_df
```

position should be a variable (and thus should be its own column). Salary is also a variable and should also be in its own column.

```{r}
##  OR 2:11 instead of -1
nfl_long <- nfl_df |>
  pivot_longer(-1, names_to = "position",
               values_to = "salary")
```

Your Turn 8 and 9

```{r}
nfl_max <- nfl_long |>
  group_by(position, year) |>
  mutate(rank_salary = rank(desc(salary), ties.method = "first")) |>
  arrange(position, year, rank_salary) |>
  filter(rank_salary == 1)
## ties.method by default breaks ranking ties by giving
## the tied rows an "average" of their ranks
## setting ties.method to be "first" breaks the tie
## by giving the "first" player in the data set the 
## higher rank
ggplot(data = nfl_max, aes(x = year, y = salary, 
                           colour = position)) +
  geom_line() +
  scale_colour_viridis_d() +
  theme_minimal()

ggplot(data = nfl_max, aes(x = year, y = salary)) +
  geom_line() +
  facet_wrap(~ position)
```

Your Turn 10.

```{r}
nfl_top20 <- nfl_long |>
  group_by(position, year) |>
  mutate(rank_salary = rank(desc(salary), ties.method = "first")) |>
  arrange(position, year, rank_salary) |>
  filter(rank_salary <= 20) |>
  ## OR, since we have arranged in ascending order of rank
  ## slice(1:20)
  summarise(mean_salary = mean(salary))
## nfl has become a passing league and you can see a 
## relatively flat slope for the runningback position's
## salary

ggplot(data = nfl_top20, aes(x = year, y = mean_salary)) +
  geom_line() +
  facet_wrap(~ position)
```

Your Turn 11

```{r}
nfl_inflation <- nfl_long |>
  group_by(position, year) |>
  mutate(rank_salary = rank(desc(salary), ties.method = "first")) |>
  arrange(position, year, rank_salary) |>
  filter(year == 2011 | year == 2018) |>
  mutate(salary_adj = if_else(year == 2011,
                              true = salary * 1.12,
                              false = salary)) |>
  filter(rank_salary <= 20) |>
  summarise(mean_sal_adj = mean(salary_adj))

ggplot(data = nfl_inflation, aes(x = year, y = mean_sal_adj)) +
  geom_line() +
  facet_wrap(~ position)
## runningbacks actually have a decrease in mean salary
## after adjusting for inflation
```

Your Turn 12.

```{r}
nfl_rank <- nfl_long |>
  group_by(position, year) |>
  mutate(rank_salary = rank(desc(salary), ties.method = "first")) 

nfl_rank_2018 <- nfl_rank |> filter(year == 2018)
ggplot(data = nfl_rank_2018, aes(x = rank_salary, y = salary)) +
  geom_line() +
  facet_wrap(~ position)
## quarterbacks have the largest "depreciation" from
## higher ranked players to lower ranked players
```