---
title: "Section 2: Intro to Plotting with ggplot"
author: "Matt Higham"
format: 
  html:
    embed-resources: true
---

## Section 2.2: Basic Plot Structure

```{r}
library(tidyverse)
stat113_df <- read_csv("https://raw.githubusercontent.com/highamm/ds234_quarto/main/data_online/stat113.csv")

ggplot(data = stat113_df, aes(x = GPA)) +
  geom_histogram()

ggplot(data = stat113_df, aes(x = GPA)) +
  geom_histogram(colour = "black", fill = "white", bins = 17)

ggplot(data = stat113_df, aes(x = GPA)) +
  geom_freqpoly(bins = 17)
```

#### Exercises 1 - 3

```{r}
names(stat113_df)
stat113_df
ggplot(data = stat113_df, aes(x = Exercise)) +
  geom_histogram(colour = "lightpink2", fill = "lightpink")
```

Exercises 4 through 6

```{r}
ggplot(data = stat113_df, aes(x = Sport)) +
  geom_bar(colour = "darkorange", fill = "darkorange4")

ggplot(data = stat113_df, aes(x = Year, fill = Sex)) +
  geom_bar(position = "fill") +
  labs(y = "Proportion")
```

Exercises 7 and 8


#### Section 2.4

Class Exercises

Class Exercise 1.

```{r}
stat113_restructured <- stat113_df |> group_by(SocialMedia) |>
  summarise(n_social = n())
ggplot(data = stat113_restructured,
       aes(x = SocialMedia)) +
  geom_bar()

ggplot(data = stat113_restructured,
       aes(x = SocialMedia, y = n_social)) +
  geom_col()
```

Class Exercises 2 through 5.

```{r}
library(tidyverse)
fitness_full <- read_csv("https://raw.githubusercontent.com/highamm/ds234_quarto/main/data_online/higham_fitness_clean.csv",
                         col_types = list(stepgoal = col_factor())) |>
  mutate(weekend_ind = case_when(weekday == "Sat" | weekday == "Sun" ~ "weekend",
                                 .default = "weekday"))

ggplot(data = fitness_full, aes(x = distance, y = active_cals)) +
  geom_point() +
  geom_smooth(span = 1.1,
              se = FALSE)

## method = "lm" makes a best fit line
## se = FALSE gets rid of the gray error band
## span controls how "wiggly" the smoother is
```

```{r}
ggplot(data = stat113_df,
       aes(x = Exercise,
           y = GPA)) +
  geom_point() +
  facet_wrap(~ Sex + Sport)

ggplot(data = stat113_df,
       aes(x = Exercise,
           y = GPA)) +
  geom_point() +
  facet_grid(Sex ~ Sport)

ggplot(data = stat113_df, aes(x = Award, y = Exercise)) +
  geom_boxplot(outlier.shape = 8)
```

Class Exercise 6. Skip.

## Your Turn

Your Turn 2 and 3

```{r}
ggplot(data = stat113_df,
       aes(x = Wgt, y = Hgt)) +
  geom_point(aes(colour = Sport))

ggplot(data = stat113_df,
       aes(x = Wgt, y = Hgt)) +
  geom_point() +
  facet_wrap(~ Sport)
##in general, colour is more useful for
## variables that have fewer levels

```

YYour Turn 4

```{r}
ggplot(data = fitness_full,
       aes(x = distance)) +
  geom_freqpoly(aes(colour = weekday))

ggplot(data = fitness_full, aes(x = distance)) +
  geom_histogram() +
  facet_wrap(~ weekday)

## colour is a little hard to distinguish,
## but it is nice having all of the days on 
## a single plot.
```




Your Turn 5

Line plots are useful if there is one value for the y variable for each distinct value of the x variable. For the stat 113 data, theree would be more than one exercise value for each unique GPA.

Your Turn 6, 7, 8. Skip

## Section 2.5: Aesthetics



## Section 2.6: Practice

Class Exercise 1.

```{r}
ggplot(data = stat113_df,
       aes(x = Wgt, y = Hgt)) +
  geom_point() +
  geom_smooth(aes(colour = Sport))
```

Class Exercise 2.

```{r}
ggplot(data = stat113_df, aes(x = TV)) +
  geom_histogram(colour = "black", fill = "white")
```

## Your TURN

Your Turn 1

a. "lm" is not a variable in our data frame so it should not go inside an aes().

c and d. both have an issue that groupvar needs to be in an aes() function. Part c also has the issue that `colour = "purple"` should not be in aes().

e. looks great!

f. colour = "purple" should not be in an aes() function.

```{r}
ggplot(data = stat113_df, aes(x = Wgt, y = Hgt,
                              colour = Sex)) +
  geom_point(colour = "purple") +
  geom_smooth(method = "lm")


```

b. also works! The local option for colour will override the global specification.


```{r}
ggplot(data = stat113_df, aes(x = Wgt, y = Hgt,
                              colour = Sex)) +
  geom_point() +
  geom_smooth(method = "lm") +
  scale_colour_manual(values = c("purple", "blue"))
```

Your  Turn 2

```{r}
## ggplot(data = toy_df) +
##  geom_point(aes(x = xvar, y = yvar), colour = "purple") +
##  geom_smooth(method = "lm", aes(x = xvar, y = yvar,
 ###                                colour = groupvar))
## global aesthetics are more useful if they are used by
## every subsequent GEOM.
```