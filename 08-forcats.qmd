---
title: "Section 8: Factors with `forcats`"
format: 
  html:
    embed-resources: true
---

```{r}
library(tidyverse)
library(here)
pokemon_df <- read_csv(here("data/pokemon_allgen.csv")) |>
  mutate(Generation_cat = factor(Generation))


pokemon_nodup <- pokemon_df |> group_by(`#`) |> slice(1) |>
  ungroup()
pokemon_long <- pokemon_nodup |>
  pivot_longer(c(`Type 1`, `Type 2`),
               names_to = "Number",
               values_to = "Type")
pokemon_sum <- pokemon_long |>
  group_by(Type) |>
  summarise(count_type = n()) |>
  filter(!is.na(Type))
ggplot(data = pokemon_sum, aes(x = Type,
                               y = count_type)) +
  geom_col() +
  coord_flip() + ## flips the x and y axes
  theme_minimal()
```

## Class Exercises

Class Exercise 1

The plots do not show variability, shape of the distribution, outliers, or the sample size.

Those plots would be appropriate for counting up the total number of values for a categorical variable.

Class Exercise 2

After grouping by `#`, `slice(1)` keeps the first pokemon for each number.

```{r}
pokemon_df |>
  distinct(`#`, .keep_all = TRUE)
```

Class Exercise 3

`forcats` functions generally do not re-order well if the data frame is grouped.

## Your Turn

```{r}
library(tidyverse)
library(here)
standings_df <- read_csv(here("data/standings.csv"))
standings_df
```

Your Turn 1

```{r}
table(standings_df$team_name)

## your turn 2
standings_df <- standings_df |>
  mutate(team_name = fct_recode(team_name,
                                Commanders = "Redskins"))

## your turn 3
standings_df <- standings_df |> unite(col = "franchise",
                      c(team, team_name), sep = " ")

## your turn 4
standings_df <- standings_df |> mutate(franchise = fct_collapse(franchise,
                                                `San Diego LA Chargers` = c("San Diego Chargers", "Los Angeles Chargers"),
                                                `St. Louis LA Rams` = c("St. Louis Rams", "Los Angeles Rams"))) 

## your turn 5
standings_df |> mutate(playoffs_ind = if_else(playoffs == "Playoffs",
                                              true = 1, false = 0)) |>
  relocate(playoffs_ind) |>
  group_by(franchise) |>
  summarise(total_playoffs = sum(playoffs_ind))

standings_top10 <- standings_df |> filter(playoffs == "Playoffs") |>
  relocate(playoffs) |>
  group_by(franchise) |>
  summarise(total_playoffs = n()) |>
  arrange(desc(total_playoffs)) |>
  slice(1:10) |>
  mutate(franchise = fct_reorder(franchise, total_playoffs))

ggplot(standings_top10, aes(x = franchise, y = total_playoffs)) +
  geom_segment(aes(xend = franchise, y = 0, yend = total_playoffs), color="skyblue") +
  geom_point(color="blue", size=4, alpha=0.6) +
  coord_flip() +
  theme_minimal()
```
