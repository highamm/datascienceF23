---
title: "Section 10: Import"
author: "Matt Higham"
format: 
  html:
    embed-resources: true
---

## Section 10.1: `read_csv()`

```{r}
library(tidyverse)
theme_set(theme_minimal())
## set theme to theme_minimal() in all plots throughout the .qmd
library(here)
cars_df <- read_csv(here("data/mtcarsex.csv"))
head(cars_df)

cars_df <- read_csv(here("data/mtcarsex.csv"), skip = 2,
                    na = c("NA", "", "-999"),
                    col_types = cols(
                      cyl = col_factor()
                    )) |>
  slice(-c(1, 2))
## skip = 2 means that r will skip the first 2 liness before
## attempting to read in the data
```

Exercise 1.

```{r}
fitness_df <- read_csv(here::here("data/higham_fitness_notclean.csv"),
                       col_types = cols(
  Start = col_date(format = ""),
  active_cals = col_double(),
  distance = col_double(),
  flights = col_double(),
  steps = col_double(),
  month = col_factor(),
  weekday = col_factor(),
  dayofyear = col_double(),
  stepgoal = col_logical()
))
```

## Section 10.2: Data Scraping

```{r}
## install.packages("rvest")
library(tidyverse)
library(rvest)

## provide the URL and name it something (in this case, url).
url <- "https://en.wikipedia.org/wiki/Gun_violence_in_the_United_States_by_state"

## read_html() convert the html code from the URL into something R can read
tab <- read_html(url) |> 
  html_nodes("table") ## html_nodes can grab only the tables 

test1 <- tab[[1]] |> html_table()
test1
test2 <- tab[[2]] |> html_table()
test2
test3 <- tab[[3]] |> html_table()
test3
```

```{r}
url <- "https://saintsathletics.com/sports/baseball/stats/2023"

tab <- read_html(url) |> html_nodes("table")
tab
obj <- tab[[1]] |> html_table()
obj
obj2 <- tab[[2]] |> html_table()
obj2
```

## Class Exercises 

Class Exercise 1.

```{r}
library(tidyverse)
df <- read_delim(here("data/birthdays.txt"), delim = " - ",
                 skip = 4,
                 col_names = c("birthday",
                               "name",
                               "animal",
                               "time"),
                 na = c("N/A", "?"),
                 col_types = cols(
                   animal = col_factor(),
                   time = col_character()
                 )) |>
  mutate(time = parse_number(time))
df
```

Class Exercise 2.

```{r}
install.packages("readxl")
library(readxl)
read_excel(here::here("data/evals_prof.xlsx"))
## here::here says to use the here() function
## from the here package without having to type
## library(here)
```

Class Exercise 3.

```{r}
read_excel(here::here("data/evals_prof.xlsx"),
           sheet = 2)

```

Class Exercise 4.

```{r}
library(rvest)
url1 <- "https://en.wikipedia.org/wiki/Josh_Allen_(quarterback)"
tab_allen_stats <- read_html(url1) |> html_nodes("table")
allen_df <- tab_allen_stats[[6]] |> html_table()
allen_df |> arrange(Year)
##  R will not do any operation if a data frame
## has duplicated column names

allen_stats <- tab_allen_stats[[6]] |> html_table(header = FALSE) 
allen_stats
## header = FALSE says to not use any of the scraped data
## as column names

## paste together the first two rows to create new column
## names
newnames <- paste(allen_stats[1, ], allen_stats[2, ])

## set_names() says to use the newnames as the new column
## headers and then drop the first two rows
allen_stats |> set_names(newnames) |>
  slice(-1, -2)
```